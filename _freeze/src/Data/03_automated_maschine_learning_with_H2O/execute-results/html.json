{
  "hash": "bc0101d65ff86cc9533a90fe0db50718",
  "result": {
    "markdown": "---\ntitle: \"Automated Maschine Learning with H2O\"\nauthor: \"Christian SÃ¼hl\"\n---\n\n::: {.cell hash='03_automated_maschine_learning_with_H2O_cache/html/unnamed-chunk-1_636aba6abe71246c91a744f8c9bf1786'}\n\n```{.r .cell-code}\nlibrary(h2o)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n----------------------------------------------------------------------\n\nYour next step is to start H2O:\n    > h2o.init()\n\nFor H2O package documentation, ask for help:\n    > ??h2o\n\nAfter starting H2O, you can use the Web UI at http://localhost:54321\nFor more information visit https://docs.h2o.ai\n\n----------------------------------------------------------------------\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'h2o'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    cor, sd, var\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    %*%, %in%, &&, ||, apply, as.factor, as.numeric, colnames,\n    colnames<-, ifelse, is.character, is.factor, is.numeric, log,\n    log10, log1p, log2, round, signif, trunc\n```\n:::\n\n```{.r .cell-code}\n# To launch H2O locally with default initialization arguments, use the following: \nh2o.init()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Connection successful!\n\nR is connected to the H2O cluster: \n    H2O cluster uptime:         1 hours 5 minutes \n    H2O cluster timezone:       Europe/Berlin \n    H2O data parsing timezone:  UTC \n    H2O cluster version:        3.40.0.1 \n    H2O cluster version age:    3 months and 11 days \n    H2O cluster name:           H2O_started_from_R_Chris_yuh446 \n    H2O cluster total nodes:    1 \n    H2O cluster total memory:   3.98 GB \n    H2O cluster total cores:    12 \n    H2O cluster allowed cores:  12 \n    H2O cluster healthy:        TRUE \n    H2O Connection ip:          localhost \n    H2O Connection port:        54321 \n    H2O Connection proxy:       NA \n    H2O Internal Security:      FALSE \n    R Version:                  R version 4.0.5 (2021-03-31) \n```\n:::\n:::\n\n::: {.cell hash='03_automated_maschine_learning_with_H2O_cache/html/unnamed-chunk-2_71e03229d038164d35aea2d6e20c1d1b'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.1     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.2     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx lubridate::day()   masks h2o::day()\nx dplyr::filter()    masks stats::filter()\nx lubridate::hour()  masks h2o::hour()\nx dplyr::lag()       masks stats::lag()\nx lubridate::month() masks h2o::month()\nx lubridate::week()  masks h2o::week()\nx lubridate::year()  masks h2o::year()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\ncar_stats <- function(groupby_var, measure_var) {\n    groupby_var <- enquo(groupby_var)\n    measure_var <- enquo(measure_var)\n    ret <- mtcars %>% \n             group_by(!!groupby_var) %>%\n             summarize(min = min(!!measure_var), max = max(!!measure_var)) %>%\n             # Optional: as_label() and \"walrus operator\" :=\n             mutate(measure_var = as_label(measure_var), !!measure_var := \"test\")\n    return(ret)\n}\ncar_stats(cyl,hp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 x 5\n    cyl   min   max measure_var hp   \n  <dbl> <dbl> <dbl> <chr>       <chr>\n1     4    52   113 hp          test \n2     6   105   175 hp          test \n3     8   150   335 hp          test \n```\n:::\n\n```{.r .cell-code}\nscatter_plot <- function(data, x_var, y_var) {\n  x_var <- enquo(x_var)\n  y_var <- enquo(y_var)\n  ret <- data %>% \n           ggplot(aes(x = !!x_var, y = !!y_var)) + \n           geom_point() + \n           geom_smooth() +\n           ggtitle(str_c(as_label(y_var), \" vs. \",as_label(x_var)))\n  return(ret)\n}\nscatter_plot(mtcars, cyl, hp)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric,\n: pseudoinverse used at 3.98\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric,\n: neighborhood radius 4.02\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric,\n: reciprocal condition number 2.0055e-016\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in simpleLoess(y, x, w, span, degree = degree, parametric = parametric,\n: There are other near singularities as well. 16.16\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x\nelse if (is.data.frame(newdata))\nas.matrix(model.frame(delete.response(terms(object)), : pseudoinverse used at\n3.98\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x\nelse if (is.data.frame(newdata))\nas.matrix(model.frame(delete.response(terms(object)), : neighborhood radius\n4.02\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x\nelse if (is.data.frame(newdata))\nas.matrix(model.frame(delete.response(terms(object)), : reciprocal condition\nnumber 2.0055e-016\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in predLoess(object$y, object$x, newx = if (is.null(newdata)) object$x\nelse if (is.data.frame(newdata))\nas.matrix(model.frame(delete.response(terms(object)), : There are other near\nsingularities as well. 16.16\n```\n:::\n\n::: {.cell-output-display}\n![](03_automated_maschine_learning_with_H2O_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='03_automated_maschine_learning_with_H2O_cache/html/unnamed-chunk-3_b365970b43a778bf0706ccc76f1403d2'}\n\n```{.r .cell-code}\nlibrary(readr)\n# Load data\nemployee_attrition_tbl <- read_csv(\"datasets-1067-1925-WA_Fn-UseC_-HR-Employee-Attrition.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1470 Columns: 35\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr  (9): Attrition, BusinessTravel, Department, EducationField, Gender, Job...\ndbl (26): Age, DailyRate, DistanceFromHome, Education, EmployeeCount, Employ...\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n# Business & Data Understanding: Department and Job Role\n\n# Data subset\ndept_job_role_tbl <- employee_attrition_tbl %>%\n  select(EmployeeNumber, Department, JobRole, PerformanceRating, Attrition)\n\ndept_job_role_tbl %>%\n\n  group_by(Attrition) %>%\n  summarize(n = n()) %>%\n  ungroup() %>%\n  mutate(pct = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 x 3\n  Attrition     n   pct\n  <chr>     <int> <dbl>\n1 No         1233 0.839\n2 Yes         237 0.161\n```\n:::\n\n```{.r .cell-code}\n# Attrition by department\ndept_job_role_tbl %>%\n\n  # Block 1\n  group_by(Department, Attrition) %>%\n  summarize(n = n()) %>%\n  ungroup() %>%\n\n  # Block 2: Caution: It's easy to inadvertently miss grouping when creating counts & percents within groups\n  group_by(Department) %>%\n  mutate(pct = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Department'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 4\n# Groups:   Department [3]\n  Department             Attrition     n   pct\n  <chr>                  <chr>     <int> <dbl>\n1 Human Resources        No           51 0.810\n2 Human Resources        Yes          12 0.190\n3 Research & Development No          828 0.862\n4 Research & Development Yes         133 0.138\n5 Sales                  No          354 0.794\n6 Sales                  Yes          92 0.206\n```\n:::\n\n```{.r .cell-code}\n# Attrition by job role\ndept_job_role_tbl %>%\n\n  # Block 1\n  group_by(Department, JobRole, Attrition) %>%\n  summarize(n = n()) %>%\n  ungroup() %>%\n\n  # Block 2\n  group_by(Department, JobRole) %>%\n  mutate(pct = n / sum(n)) %>%\n  ungroup() %>%\n\n  # Block 3\n  filter(Attrition %in% \"Yes\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Department', 'JobRole'. You can override\nusing the `.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 x 5\n   Department             JobRole                   Attrition     n    pct\n   <chr>                  <chr>                     <chr>     <int>  <dbl>\n 1 Human Resources        Human Resources           Yes          12 0.231 \n 2 Research & Development Healthcare Representative Yes           9 0.0687\n 3 Research & Development Laboratory Technician     Yes          62 0.239 \n 4 Research & Development Manager                   Yes           3 0.0556\n 5 Research & Development Manufacturing Director    Yes          10 0.0690\n 6 Research & Development Research Director         Yes           2 0.025 \n 7 Research & Development Research Scientist        Yes          47 0.161 \n 8 Sales                  Manager                   Yes           2 0.0541\n 9 Sales                  Sales Executive           Yes          57 0.175 \n10 Sales                  Sales Representative      Yes          33 0.398 \n```\n:::\n:::\n\n::: {.cell hash='03_automated_maschine_learning_with_H2O_cache/html/unnamed-chunk-4_10b37be5fb78a6d37fe7e1167e9f4791'}\n\n```{.r .cell-code}\n# Use this\n# Function to convert counts to percentages. \ncount_to_pct <- function(data, ..., col = n) {\n  # capture the dots\n  grouping_vars_expr <- quos(...)\n  col_expr <- enquo(col)\n  ret <- data %>%\n    group_by(!!! grouping_vars_expr) %>%\n    mutate(pct = (!! col_expr) / sum(!! col_expr)) %>%\n    ungroup()\n  return(ret)\n}\n\nassess_attrition <- function(data, attrition_col, attrition_value, baseline_pct) {\n\n  attrition_col_expr <- enquo(attrition_col)\n\n  data %>%\n  \n    # Use parenthesis () to give tidy eval evaluation priority\n    filter((!! attrition_col_expr) %in% attrition_value) %>%\n    arrange(desc(pct)) %>%\n    mutate(\n      # Function inputs in numeric format (e.g. baseline_pct = 0.088 don't require tidy eval)\n      above_industry_avg = case_when(\n        pct > baseline_pct ~ \"Yes\",\n        TRUE ~ \"No\"\n      )\n    )\n\n}\n\n# Function to calculate attrition cost\ncalculate_attrition_cost <- function(\n\n  # Employee\n  n                    = 1,\n  salary               = 80000,\n\n  # Direct Costs\n  separation_cost      = 500,\n  vacancy_cost         = 10000,\n  acquisition_cost     = 4900,\n  placement_cost       = 3500,\n\n  # Productivity Costs\n  net_revenue_per_employee = 250000,\n  workdays_per_year        = 240,\n  workdays_position_open   = 40,\n  workdays_onboarding      = 60,\n  onboarding_efficiency    = 0.50\n\n) {\n\n  # Direct Costs\n  direct_cost <- sum(separation_cost, vacancy_cost, acquisition_cost, placement_cost)\n\n  # Lost Productivity Costs\n  productivity_cost <- net_revenue_per_employee / workdays_per_year *\n    (workdays_position_open + workdays_onboarding * onboarding_efficiency)\n\n  # Savings of Salary & Benefits (Cost Reduction)\n  salary_benefit_reduction <- salary / workdays_per_year * workdays_position_open\n\n  # Estimated Turnover Per Employee\n  cost_per_employee <- direct_cost + productivity_cost - salary_benefit_reduction\n\n  # Total Cost of Employee Turnover\n  total_cost <- n * cost_per_employee\n\n  return(total_cost)\n\n}\n\n# Function to plot attrition\nplot_attrition <- function(data, \n                           ..., \n                           .value,\n                           fct_reorder = TRUE,\n                           fct_rev     = FALSE,\n                           include_lbl = TRUE,\n                           color       = \"#2dc6d6\",\n                           units       = c(\"0\", \"K\", \"M\")) {\n\n  ### Inputs\n  group_vars_expr   <- quos(...)\n  \n  # If the user does not supply anything, \n  # this takes the first column of the supplied data\n  if (length(group_vars_expr) == 0) {\n    group_vars_expr <- quos(rlang::sym(colnames(data)[[1]]))\n    }\n\n  value_expr <- enquo(.value)\n\n  units_val  <- switch(units[[1]],\n                       \"M\" = 1e6,\n                       \"K\" = 1e3,\n                       \"0\" = 1)\n  if (units[[1]] == \"0\") units <- \"\"\n\n  # Data Manipulation\n  # This is a so called Function Factory (a function that produces a function)\n  usd <- scales::dollar_format(prefix = \"$\", largest_with_cents = 1e3)\n\n  # Create the axis labels and values for the plot\n  data_manipulated <- data %>%\n    mutate(name = str_c(!!! group_vars_expr, sep = \": \") %>% as_factor()) %>%\n    mutate(value_text = str_c(usd(!! value_expr / units_val),\n                              units[[1]], sep = \"\"))\n\n  \n  # Order the labels on the y-axis according to the input\n  if (fct_reorder) {\n    data_manipulated <- data_manipulated %>%\n      mutate(name = forcats::fct_reorder(name, !! value_expr)) %>%\n      arrange(name)\n  }\n\n  if (fct_rev) {\n    data_manipulated <- data_manipulated %>%\n      mutate(name = forcats::fct_rev(name)) %>%\n      arrange(name)\n  }\n\n  # Visualization\n  g <- data_manipulated %>%\n\n        # \"name\" is a column name generated by our function internally as part of the data manipulation task\n        ggplot(aes(x = (!! value_expr), y = name)) +\n        geom_segment(aes(xend = 0, yend = name), color = color) +\n        geom_point(aes(size = !! value_expr), color = color) +\n        scale_x_continuous(labels = scales::dollar) +\n        scale_size(range = c(3, 5)) +\n        theme(legend.position = \"none\")\n\n  # Plot labels if TRUE\n  if (include_lbl) {\n    g <- g +\n      geom_label(aes(label = value_text, size = !! value_expr),\n                 hjust = \"inward\", color = color)\n  }\n\n  return(g)\n\n}\n\ndept_job_role_tbl %>%\n\n  # Block 1\n  count(Department, JobRole, Attrition) %>%\n\n  # Block 2\n  count_to_pct(Department, JobRole) %>%  \n\n  # Block 3\n  assess_attrition(Attrition, attrition_value = \"Yes\", baseline_pct = 0.088) %>%\n\n  # Block 4. Set salaray to 80000 for now\n  mutate(\n    cost_of_attrition = calculate_attrition_cost(n = n, salary = 80000)\n  ) %>%\n\n  # Select columnns\n  plot_attrition(Department, JobRole, .value = cost_of_attrition,\n                 units = \"M\") +\n  labs(\n    title = \"Estimated Cost of Attrition by Job Role\",\n    x = \"Cost of Attrition\",\n    subtitle = \"Looks like Sales Executive and Labaratory Technician are the biggest drivers of cost\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_automated_maschine_learning_with_H2O_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='03_automated_maschine_learning_with_H2O_cache/html/unnamed-chunk-5_2387c67df8528d7f78afd27e5dcfff28'}\n\n```{.r .cell-code}\n# Libraries \nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(skimr)\nlibrary(GGally)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n```\n:::\n\n```{.r .cell-code}\n# Load Data data definitions\n\npath_data_definitions <- \"data_definitions.xlsx\"\ndefinitions_raw_tbl   <- read_excel(path_data_definitions, sheet = 1, col_names = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n* `` -> `...1`\n* `` -> `...2`\n```\n:::\n\n```{.r .cell-code}\nemployee_attrition_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,470 x 35\n     Age Attrition BusinessTravel    DailyRate Department       DistanceFromHome\n   <dbl> <chr>     <chr>                 <dbl> <chr>                       <dbl>\n 1    41 Yes       Travel_Rarely          1102 Sales                           1\n 2    49 No        Travel_Frequently       279 Research & Deve~                8\n 3    37 Yes       Travel_Rarely          1373 Research & Deve~                2\n 4    33 No        Travel_Frequently      1392 Research & Deve~                3\n 5    27 No        Travel_Rarely           591 Research & Deve~                2\n 6    32 No        Travel_Frequently      1005 Research & Deve~                2\n 7    59 No        Travel_Rarely          1324 Research & Deve~                3\n 8    30 No        Travel_Rarely          1358 Research & Deve~               24\n 9    38 No        Travel_Frequently       216 Research & Deve~               23\n10    36 No        Travel_Rarely          1299 Research & Deve~               27\n# i 1,460 more rows\n# i 29 more variables: Education <dbl>, EducationField <chr>,\n#   EmployeeCount <dbl>, EmployeeNumber <dbl>, EnvironmentSatisfaction <dbl>,\n#   Gender <chr>, HourlyRate <dbl>, JobInvolvement <dbl>, JobLevel <dbl>,\n#   JobRole <chr>, JobSatisfaction <dbl>, MaritalStatus <chr>,\n#   MonthlyIncome <dbl>, MonthlyRate <dbl>, NumCompaniesWorked <dbl>,\n#   Over18 <chr>, OverTime <chr>, PercentSalaryHike <dbl>, ...\n```\n:::\n\n```{.r .cell-code}\n# Descriptive Features\nemployee_attrition_tbl %>% select(Age, DistanceFromHome, Gender, MaritalStatus, NumCompaniesWorked, Over18)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,470 x 6\n     Age DistanceFromHome Gender MaritalStatus NumCompaniesWorked Over18\n   <dbl>            <dbl> <chr>  <chr>                      <dbl> <chr> \n 1    41                1 Female Single                         8 Y     \n 2    49                8 Male   Married                        1 Y     \n 3    37                2 Male   Single                         6 Y     \n 4    33                3 Female Married                        1 Y     \n 5    27                2 Male   Married                        9 Y     \n 6    32                2 Male   Single                         0 Y     \n 7    59                3 Female Married                        4 Y     \n 8    30               24 Male   Divorced                       1 Y     \n 9    38               23 Male   Single                         0 Y     \n10    36               27 Male   Married                        6 Y     \n# i 1,460 more rows\n```\n:::\n\n```{.r .cell-code}\n# Employment Features\nemployee_attrition_tbl %>% select(Department, EmployeeCount, EmployeeNumber, JobInvolvement, JobLevel, JobRole, JobSatisfaction)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,470 x 7\n   Department       EmployeeCount EmployeeNumber JobInvolvement JobLevel JobRole\n   <chr>                    <dbl>          <dbl>          <dbl>    <dbl> <chr>  \n 1 Sales                        1              1              3        2 Sales ~\n 2 Research & Deve~             1              2              2        2 Resear~\n 3 Research & Deve~             1              4              2        1 Labora~\n 4 Research & Deve~             1              5              3        1 Resear~\n 5 Research & Deve~             1              7              3        1 Labora~\n 6 Research & Deve~             1              8              3        1 Labora~\n 7 Research & Deve~             1             10              4        1 Labora~\n 8 Research & Deve~             1             11              3        1 Labora~\n 9 Research & Deve~             1             12              2        3 Manufa~\n10 Research & Deve~             1             13              3        2 Health~\n# i 1,460 more rows\n# i 1 more variable: JobSatisfaction <dbl>\n```\n:::\n\n```{.r .cell-code}\n# Compensation Features\nemployee_attrition_tbl %>% select(DailyRate, HourlyRate, MonthlyIncome, MonthlyRate, PercentSalaryHike, StockOptionLevel)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,470 x 6\n   DailyRate HourlyRate MonthlyIncome MonthlyRate PercentSalaryHike\n       <dbl>      <dbl>         <dbl>       <dbl>             <dbl>\n 1      1102         94          5993       19479                11\n 2       279         61          5130       24907                23\n 3      1373         92          2090        2396                15\n 4      1392         56          2909       23159                11\n 5       591         40          3468       16632                12\n 6      1005         79          3068       11864                13\n 7      1324         81          2670        9964                20\n 8      1358         67          2693       13335                22\n 9       216         44          9526        8787                21\n10      1299         94          5237       16577                13\n# i 1,460 more rows\n# i 1 more variable: StockOptionLevel <dbl>\n```\n:::\n\n```{.r .cell-code}\n# Survery Results\nemployee_attrition_tbl %>% select(EnvironmentSatisfaction, JobSatisfaction, RelationshipSatisfaction, WorkLifeBalance)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,470 x 4\n   EnvironmentSatisfact~1 JobSatisfaction RelationshipSatisfac~2 WorkLifeBalance\n                    <dbl>           <dbl>                  <dbl>           <dbl>\n 1                      2               4                      1               1\n 2                      3               2                      4               3\n 3                      4               3                      2               3\n 4                      4               3                      3               3\n 5                      1               2                      4               3\n 6                      4               4                      3               2\n 7                      3               1                      1               2\n 8                      4               3                      2               3\n 9                      4               3                      2               3\n10                      3               3                      2               2\n# i 1,460 more rows\n# i abbreviated names: 1: EnvironmentSatisfaction, 2: RelationshipSatisfaction\n```\n:::\n\n```{.r .cell-code}\n# Performance Data\nemployee_attrition_tbl %>% select(JobInvolvement, PerformanceRating)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,470 x 2\n   JobInvolvement PerformanceRating\n            <dbl>             <dbl>\n 1              3                 3\n 2              2                 4\n 3              2                 3\n 4              3                 3\n 5              3                 3\n 6              3                 3\n 7              4                 4\n 8              3                 4\n 9              2                 4\n10              3                 3\n# i 1,460 more rows\n```\n:::\n\n```{.r .cell-code}\n# Work-Life Features\nemployee_attrition_tbl %>% select(BusinessTravel, OverTime)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,470 x 2\n   BusinessTravel    OverTime\n   <chr>             <chr>   \n 1 Travel_Rarely     Yes     \n 2 Travel_Frequently No      \n 3 Travel_Rarely     Yes     \n 4 Travel_Frequently Yes     \n 5 Travel_Rarely     No      \n 6 Travel_Frequently No      \n 7 Travel_Rarely     Yes     \n 8 Travel_Rarely     No      \n 9 Travel_Frequently No      \n10 Travel_Rarely     No      \n# i 1,460 more rows\n```\n:::\n\n```{.r .cell-code}\n# Training & Education\nemployee_attrition_tbl %>% select(Education, EducationField, TrainingTimesLastYear)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,470 x 3\n   Education EducationField TrainingTimesLastYear\n       <dbl> <chr>                          <dbl>\n 1         2 Life Sciences                      0\n 2         1 Life Sciences                      3\n 3         2 Other                              3\n 4         4 Life Sciences                      3\n 5         1 Medical                            3\n 6         2 Life Sciences                      2\n 7         3 Medical                            3\n 8         1 Life Sciences                      2\n 9         3 Life Sciences                      2\n10         3 Medical                            3\n# i 1,460 more rows\n```\n:::\n\n```{.r .cell-code}\n# Time-Based Features\nemployee_attrition_tbl %>% select(TotalWorkingYears, YearsAtCompany, YearsInCurrentRole, YearsSinceLastPromotion, YearsWithCurrManager)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,470 x 5\n   TotalWorkingYears YearsAtCompany YearsInCurrentRole YearsSinceLastPromotion\n               <dbl>          <dbl>              <dbl>                   <dbl>\n 1                 8              6                  4                       0\n 2                10             10                  7                       1\n 3                 7              0                  0                       0\n 4                 8              8                  7                       3\n 5                 6              2                  2                       2\n 6                 8              7                  7                       3\n 7                12              1                  0                       0\n 8                 1              1                  0                       0\n 9                10              9                  7                       1\n10                17              7                  7                       7\n# i 1,460 more rows\n# i 1 more variable: YearsWithCurrManager <dbl>\n```\n:::\n:::\n\n::: {.cell hash='03_automated_maschine_learning_with_H2O_cache/html/unnamed-chunk-6_5c6c29a0effd3dad6b858067dfebf9e2'}\n\n```{.r .cell-code}\n# Step 1: Data Summarization -----\n\nskim(employee_attrition_tbl)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |                       |\n|:------------------------|:----------------------|\n|Name                     |employee_attrition_tbl |\n|Number of rows           |1470                   |\n|Number of columns        |35                     |\n|_______________________  |                       |\n|Column type frequency:   |                       |\n|character                |9                      |\n|numeric                  |26                     |\n|________________________ |                       |\n|Group variables          |None                   |\n\n\n**Variable type: character**\n\n|skim_variable  | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:--------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Attrition      |         0|             1|   2|   3|     0|        2|          0|\n|BusinessTravel |         0|             1|  10|  17|     0|        3|          0|\n|Department     |         0|             1|   5|  22|     0|        3|          0|\n|EducationField |         0|             1|   5|  16|     0|        6|          0|\n|Gender         |         0|             1|   4|   6|     0|        2|          0|\n|JobRole        |         0|             1|   7|  25|     0|        9|          0|\n|MaritalStatus  |         0|             1|   6|   8|     0|        3|          0|\n|Over18         |         0|             1|   1|   1|     0|        1|          0|\n|OverTime       |         0|             1|   2|   3|     0|        2|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable            | n_missing| complete_rate|     mean|      sd|   p0|     p25|     p50|      p75|  p100|hist                                     |\n|:------------------------|---------:|-------------:|--------:|-------:|----:|-------:|-------:|--------:|-----:|:----------------------------------------|\n|Age                      |         0|             1|    36.92|    9.14|   18|   30.00|    36.0|    43.00|    60|âââââ |\n|DailyRate                |         0|             1|   802.49|  403.51|  102|  465.00|   802.0|  1157.00|  1499|âââââ |\n|DistanceFromHome         |         0|             1|     9.19|    8.11|    1|    2.00|     7.0|    14.00|    29|âââââ |\n|Education                |         0|             1|     2.91|    1.02|    1|    2.00|     3.0|     4.00|     5|âââââ |\n|EmployeeCount            |         0|             1|     1.00|    0.00|    1|    1.00|     1.0|     1.00|     1|âââââ |\n|EmployeeNumber           |         0|             1|  1024.87|  602.02|    1|  491.25|  1020.5|  1555.75|  2068|âââââ |\n|EnvironmentSatisfaction  |         0|             1|     2.72|    1.09|    1|    2.00|     3.0|     4.00|     4|âââââ |\n|HourlyRate               |         0|             1|    65.89|   20.33|   30|   48.00|    66.0|    83.75|   100|âââââ |\n|JobInvolvement           |         0|             1|     2.73|    0.71|    1|    2.00|     3.0|     3.00|     4|âââââ |\n|JobLevel                 |         0|             1|     2.06|    1.11|    1|    1.00|     2.0|     3.00|     5|âââââ |\n|JobSatisfaction          |         0|             1|     2.73|    1.10|    1|    2.00|     3.0|     4.00|     4|âââââ |\n|MonthlyIncome            |         0|             1|  6502.93| 4707.96| 1009| 2911.00|  4919.0|  8379.00| 19999|âââââ |\n|MonthlyRate              |         0|             1| 14313.10| 7117.79| 2094| 8047.00| 14235.5| 20461.50| 26999|âââââ |\n|NumCompaniesWorked       |         0|             1|     2.69|    2.50|    0|    1.00|     2.0|     4.00|     9|âââââ |\n|PercentSalaryHike        |         0|             1|    15.21|    3.66|   11|   12.00|    14.0|    18.00|    25|âââââ |\n|PerformanceRating        |         0|             1|     3.15|    0.36|    3|    3.00|     3.0|     3.00|     4|âââââ |\n|RelationshipSatisfaction |         0|             1|     2.71|    1.08|    1|    2.00|     3.0|     4.00|     4|âââââ |\n|StandardHours            |         0|             1|    80.00|    0.00|   80|   80.00|    80.0|    80.00|    80|âââââ |\n|StockOptionLevel         |         0|             1|     0.79|    0.85|    0|    0.00|     1.0|     1.00|     3|âââââ |\n|TotalWorkingYears        |         0|             1|    11.28|    7.78|    0|    6.00|    10.0|    15.00|    40|âââââ |\n|TrainingTimesLastYear    |         0|             1|     2.80|    1.29|    0|    2.00|     3.0|     3.00|     6|âââââ |\n|WorkLifeBalance          |         0|             1|     2.76|    0.71|    1|    2.00|     3.0|     3.00|     4|âââââ |\n|YearsAtCompany           |         0|             1|     7.01|    6.13|    0|    3.00|     5.0|     9.00|    40|âââââ |\n|YearsInCurrentRole       |         0|             1|     4.23|    3.62|    0|    2.00|     3.0|     7.00|    18|âââââ |\n|YearsSinceLastPromotion  |         0|             1|     2.19|    3.22|    0|    0.00|     1.0|     3.00|    15|âââââ |\n|YearsWithCurrManager     |         0|             1|     4.12|    3.57|    0|    2.00|     3.0|     7.00|    17|âââââ |\n:::\n\n```{.r .cell-code}\n# Character Data Type\nemployee_attrition_tbl %>%\n    select_if(is.character) %>%\n    glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,470\nColumns: 9\n$ Attrition      <chr> \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\",~\n$ BusinessTravel <chr> \"Travel_Rarely\", \"Travel_Frequently\", \"Travel_Rarely\", ~\n$ Department     <chr> \"Sales\", \"Research & Development\", \"Research & Developm~\n$ EducationField <chr> \"Life Sciences\", \"Life Sciences\", \"Other\", \"Life Scienc~\n$ Gender         <chr> \"Female\", \"Male\", \"Male\", \"Female\", \"Male\", \"Male\", \"Fe~\n$ JobRole        <chr> \"Sales Executive\", \"Research Scientist\", \"Laboratory Te~\n$ MaritalStatus  <chr> \"Single\", \"Married\", \"Single\", \"Married\", \"Married\", \"S~\n$ Over18         <chr> \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", ~\n$ OverTime       <chr> \"Yes\", \"No\", \"Yes\", \"Yes\", \"No\", \"No\", \"Yes\", \"No\", \"No~\n```\n:::\n\n```{.r .cell-code}\n# Get \"levels\"\nemployee_attrition_tbl %>%\n    select_if(is.character) %>%\n    map(unique)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$Attrition\n[1] \"Yes\" \"No\" \n\n$BusinessTravel\n[1] \"Travel_Rarely\"     \"Travel_Frequently\" \"Non-Travel\"       \n\n$Department\n[1] \"Sales\"                  \"Research & Development\" \"Human Resources\"       \n\n$EducationField\n[1] \"Life Sciences\"    \"Other\"            \"Medical\"          \"Marketing\"       \n[5] \"Technical Degree\" \"Human Resources\" \n\n$Gender\n[1] \"Female\" \"Male\"  \n\n$JobRole\n[1] \"Sales Executive\"           \"Research Scientist\"       \n[3] \"Laboratory Technician\"     \"Manufacturing Director\"   \n[5] \"Healthcare Representative\" \"Manager\"                  \n[7] \"Sales Representative\"      \"Research Director\"        \n[9] \"Human Resources\"          \n\n$MaritalStatus\n[1] \"Single\"   \"Married\"  \"Divorced\"\n\n$Over18\n[1] \"Y\"\n\n$OverTime\n[1] \"Yes\" \"No\" \n```\n:::\n\n```{.r .cell-code}\n# Proportions    \nemployee_attrition_tbl %>%\n    select_if(is.character) %>%\n    map(~ table(.) %>% prop.table())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$Attrition\n.\n       No       Yes \n0.8387755 0.1612245 \n\n$BusinessTravel\n.\n       Non-Travel Travel_Frequently     Travel_Rarely \n        0.1020408         0.1884354         0.7095238 \n\n$Department\n.\n       Human Resources Research & Development                  Sales \n            0.04285714             0.65374150             0.30340136 \n\n$EducationField\n.\n Human Resources    Life Sciences        Marketing          Medical \n      0.01836735       0.41224490       0.10816327       0.31564626 \n           Other Technical Degree \n      0.05578231       0.08979592 \n\n$Gender\n.\nFemale   Male \n   0.4    0.6 \n\n$JobRole\n.\nHealthcare Representative           Human Resources     Laboratory Technician \n               0.08911565                0.03537415                0.17619048 \n                  Manager    Manufacturing Director         Research Director \n               0.06938776                0.09863946                0.05442177 \n       Research Scientist           Sales Executive      Sales Representative \n               0.19863946                0.22176871                0.05646259 \n\n$MaritalStatus\n.\n Divorced   Married    Single \n0.2224490 0.4578231 0.3197279 \n\n$Over18\n.\nY \n1 \n\n$OverTime\n.\n       No       Yes \n0.7170068 0.2829932 \n```\n:::\n\n```{.r .cell-code}\n# Numeric Data\nemployee_attrition_tbl %>%\n    select_if(is.numeric) %>%\n    map(~ unique(.) %>% length())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$Age\n[1] 43\n\n$DailyRate\n[1] 886\n\n$DistanceFromHome\n[1] 29\n\n$Education\n[1] 5\n\n$EmployeeCount\n[1] 1\n\n$EmployeeNumber\n[1] 1470\n\n$EnvironmentSatisfaction\n[1] 4\n\n$HourlyRate\n[1] 71\n\n$JobInvolvement\n[1] 4\n\n$JobLevel\n[1] 5\n\n$JobSatisfaction\n[1] 4\n\n$MonthlyIncome\n[1] 1349\n\n$MonthlyRate\n[1] 1427\n\n$NumCompaniesWorked\n[1] 10\n\n$PercentSalaryHike\n[1] 15\n\n$PerformanceRating\n[1] 2\n\n$RelationshipSatisfaction\n[1] 4\n\n$StandardHours\n[1] 1\n\n$StockOptionLevel\n[1] 4\n\n$TotalWorkingYears\n[1] 40\n\n$TrainingTimesLastYear\n[1] 7\n\n$WorkLifeBalance\n[1] 4\n\n$YearsAtCompany\n[1] 37\n\n$YearsInCurrentRole\n[1] 19\n\n$YearsSinceLastPromotion\n[1] 16\n\n$YearsWithCurrManager\n[1] 18\n```\n:::\n\n```{.r .cell-code}\nemployee_attrition_tbl %>%\n    select_if(is.numeric) %>%\n    map_df(~ unique(.) %>% length()) %>%\n    # Select all columns\n    pivot_longer(everything()) %>%\n    arrange(value) %>%\n    filter(value <= 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13 x 2\n   name                     value\n   <chr>                    <int>\n 1 EmployeeCount                1\n 2 StandardHours                1\n 3 PerformanceRating            2\n 4 EnvironmentSatisfaction      4\n 5 JobInvolvement               4\n 6 JobSatisfaction              4\n 7 RelationshipSatisfaction     4\n 8 StockOptionLevel             4\n 9 WorkLifeBalance              4\n10 Education                    5\n11 JobLevel                     5\n12 TrainingTimesLastYear        7\n13 NumCompaniesWorked          10\n```\n:::\n:::\n\n::: {.cell hash='03_automated_maschine_learning_with_H2O_cache/html/unnamed-chunk-7_656ed411c78524eeaa2f1773243816e5'}\n\n```{.r .cell-code}\nlibrary(GGally)\n# Step 2: Data Visualization ----\n\n# Create data tibble, to potentially debug the plot_ggpairs function (because it has a data argument)\ndata <- employee_attrition_tbl %>%\n    select(Attrition, Age, Gender, MaritalStatus, NumCompaniesWorked, Over18, DistanceFromHome)\n\nplot_ggpairs <- function(data, color = NULL, density_alpha = 0.5) {\n    \n    color_expr <- enquo(color)\n    \n    if (rlang::quo_is_null(color_expr)) {\n        \n        g <- data %>%\n            ggpairs(lower = \"blank\") \n        \n    } else {\n        \n        color_name <- quo_name(color_expr)\n        \n        g <- data %>%\n            ggpairs(mapping = aes_string(color = color_name), \n                    lower = \"blank\", legend = 1,\n                    diag = list(continuous = wrap(\"densityDiag\", \n                                                  alpha = density_alpha))) +\n            theme(legend.position = \"bottom\")\n    }\n    \n    return(g)\n    \n}\n\nemployee_attrition_tbl %>%\n    select(Attrition, Age, Gender, MaritalStatus, NumCompaniesWorked, Over18, DistanceFromHome) %>%\n    plot_ggpairs(color = Attrition)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `aes_string()` was deprecated in ggplot2 3.0.0.\ni Please use tidy evaluation idioms with `aes()`.\ni See also `vignette(\"ggplot2-in-packages\")` for more information.\n```\n:::\n\n::: {.cell-output-display}\n![](03_automated_maschine_learning_with_H2O_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='03_automated_maschine_learning_with_H2O_cache/html/unnamed-chunk-8_ed65f70aef6728e25f9f1c152b265756'}\n\n```{.r .cell-code}\n# Explore Features by Category\n\n#   1. Descriptive features: age, gender, marital status \nemployee_attrition_tbl %>%\n    select(Attrition, Age, Gender, MaritalStatus, NumCompaniesWorked, Over18, DistanceFromHome) %>%\n    plot_ggpairs(Attrition)\n```\n\n::: {.cell-output-display}\n![](03_automated_maschine_learning_with_H2O_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#   2. Employment features: department, job role, job level\nemployee_attrition_tbl %>%\n    select(Attrition, contains(\"employee\"), contains(\"department\"), contains(\"job\")) %>%\n    plot_ggpairs(Attrition) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in cor(x, y): Standardabweichung ist Null\n\nWarning in cor(x, y): Standardabweichung ist Null\n\nWarning in cor(x, y): Standardabweichung ist Null\n\nWarning in cor(x, y): Standardabweichung ist Null\n\nWarning in cor(x, y): Standardabweichung ist Null\n\nWarning in cor(x, y): Standardabweichung ist Null\n\nWarning in cor(x, y): Standardabweichung ist Null\n\nWarning in cor(x, y): Standardabweichung ist Null\n\nWarning in cor(x, y): Standardabweichung ist Null\n\nWarning in cor(x, y): Standardabweichung ist Null\n\nWarning in cor(x, y): Standardabweichung ist Null\n\nWarning in cor(x, y): Standardabweichung ist Null\n```\n:::\n\n::: {.cell-output-display}\n![](03_automated_maschine_learning_with_H2O_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#   3. Compensation features: HourlyRate, MonthlyIncome, StockOptionLevel \nemployee_attrition_tbl %>%\n    select(Attrition, contains(\"income\"), contains(\"rate\"), contains(\"salary\"), contains(\"stock\")) %>%\n    plot_ggpairs(Attrition)\n```\n\n::: {.cell-output-display}\n![](03_automated_maschine_learning_with_H2O_files/figure-html/unnamed-chunk-8-3.png){width=672}\n:::\n\n```{.r .cell-code}\n#   4. Survey Results: Satisfaction level, WorkLifeBalance \nemployee_attrition_tbl %>%\n    select(Attrition, contains(\"satisfaction\"), contains(\"life\")) %>%\n    plot_ggpairs(Attrition)\n```\n\n::: {.cell-output-display}\n![](03_automated_maschine_learning_with_H2O_files/figure-html/unnamed-chunk-8-4.png){width=672}\n:::\n\n```{.r .cell-code}\n#   5. Performance Data: Job Involvment, Performance Rating\nemployee_attrition_tbl %>%\n    select(Attrition, contains(\"performance\"), contains(\"involvement\")) %>%\n    plot_ggpairs(Attrition)\n```\n\n::: {.cell-output-display}\n![](03_automated_maschine_learning_with_H2O_files/figure-html/unnamed-chunk-8-5.png){width=672}\n:::\n\n```{.r .cell-code}\n#   6. Work-Life Features \nemployee_attrition_tbl %>%\n    select(Attrition, contains(\"overtime\"), contains(\"travel\")) %>%\n    plot_ggpairs(Attrition)\n```\n\n::: {.cell-output-display}\n![](03_automated_maschine_learning_with_H2O_files/figure-html/unnamed-chunk-8-6.png){width=672}\n:::\n\n```{.r .cell-code}\n#   7. Training and Education \nemployee_attrition_tbl %>%\n    select(Attrition, contains(\"training\"), contains(\"education\")) %>%\n    plot_ggpairs(Attrition)\n```\n\n::: {.cell-output-display}\n![](03_automated_maschine_learning_with_H2O_files/figure-html/unnamed-chunk-8-7.png){width=672}\n:::\n\n```{.r .cell-code}\n#   8. Time-Based Features: Years at company, years in current role\nemployee_attrition_tbl %>%\n    select(Attrition, contains(\"years\")) %>%\n    plot_ggpairs(Attrition)\n```\n\n::: {.cell-output-display}\n![](03_automated_maschine_learning_with_H2O_files/figure-html/unnamed-chunk-8-8.png){width=672}\n:::\n:::\n\n\n\n#Challenge\n## Question 1\n### What can you deduce about the interaction between Monthly Income and Attrition?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}